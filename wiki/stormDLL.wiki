#summary Storm.dll Functions and their Ordinals
#labels Type-List,Game-Starcraft,Game-Warcraft2,Game-Diablo,Game-Diablo2,Game-Warcraft3,Game-WoW,Platform-PC

{{{
101	int __stdcall SNetCreate(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
102	signed int __cdecl SNetDestroy()
103	signed int __userpurge Ordinal103<eax>(int a1<ebx>, int a2<edi>, int (__stdcall *a3)(_DWORD, _DWORD, _DWORD))
104	signed int __stdcall Ordinal104(int a1, int a2, int (__stdcall *a3)(_DWORD, _DWORD, _DWORD), int size)
105	signed int __stdcall Ordinal105(int a1, int (__stdcall *a2)(_DWORD, _DWORD, _DWORD, _DWORD))
106	signed int __stdcall Ordinal106(signed int a1, int a2)
107	signed int __stdcall Ordinal107(int type, char *src, int length, int a4)
108	signed int __stdcall Ordinal108(unsigned int a1, int a2)
109	signed int __stdcall Ordinal109(int *a1, int *a2, int a3)
110	signed int __stdcall Ordinal110(int a1)
111	signed int __stdcall Ordinal111(int a1, int a2, int a3, int a4, LPFILETIME lpFileTime, int a6)
112	signed int __stdcall Ordinal112(int unused, void* Src)
113	signed int __stdcall Ordinal113(int a1, char *dst, int size)
114	signed int __stdcall Ordinal114(void *a1)
115	signed int __stdcall Ordinal115(int a1)
116	signed int __stdcall Ordinal116(int a1, int a2, int a3, int a4, int a5)
117	signed int __stdcall SNetInitializePRovider(int a1, int a2, int a3, int a4, DWORD ThreadID)
118	signed int __userpurge SNetJoinGame<eax>(int a1<esi>, int a2, signed int a3, int a4, char *playerName, int a6, int a7)
119	signed int __stdcall SNetLeaveGame(int type)
120	signed int __stdcall SNetPerformUpgrade(int a1)
121	signed int __stdcall Ordinal121(int a1, int a2, int a3)
122	signed int __stdcall SNetReceiveTurns(unsigned int a1, int a2, int a3, int a4, int a5)
123	int __stdcall SNetRegisterEventHandler(int event, int size)
124	signed int __cdecl Ordinal124()								// Storm ClearCache?
125	int __stdcall Ordinal125(int a1, int a2, int a3, int a4, int a5, int a6)
126	bool __stdcall Ordinal126(LPARAM lParam, int a2, int a3, int a4, int a5, int a6)
127	signed int __stdcall Ordinal127(signed int a1, int a2, int a3)
128	signed int __stdcall Ordinal128(void *Buffer, int size)					// Send packet to players
129	signed int __stdcall Ordinal129(int a1)
130	signed int __stdcall Ordinal130(int a1, int a2)
131	int __stdcall Ordinal131(int a1, int a2)
132	int __fastcall CDebugSCritSect::CDebugSCritSect(LPCRITICAL_SECTION lpCriticalSection)
133	signed int __stdcall Ordinal133(int a1, int a2, int (__fastcall *a3)(_DWORD, _DWORD, _DWORD), int a4)
134	int __stdcall Ordinal134(int a1)
135	signed int __stdcall Ordinal135(signed int a1, int a2, int a3)
136	signed int __stdcall Ordinal136(int a1, int a2, int a3)
137	signed int __stdcall Ordinal137(int a1)
138	signed int __stdcall Ordinal138(int a1, int a2, int a3, int a4, int a5, int a6, const void *MemSrc, int MemSize, int a9, char *playerName, int a11, int a12)
139	signed int __stdcall Ordinal139(unsigned int a1, int size, int a3, int a4, int a5)
140	bool __stdcall Ordinal140(int a1, int a2, int a3, int a4)
141	int __stdcall Ordinal141(char *path, int a2)		// SC
141	int __thiscall CDebugSRWLock::CDebugSRWLock(void)	// WC3
142	int __stdcall Ordinal142(int a1, int a2, int a3)	// SC
142	int __thiscall CSRWLock::CSRWLock(void)			// WC3
143	int __stdcall Ordinal143(int a1)			// SC
143	int __fastcall SCritSect::SCritSect(LPCRITICAL_SECTION lpCriticalSection)	// WC3
144	signed int __stdcall Ordinal144(int a1)						// SC
144	int __stdcall SEvent::SEvent(BOOL bManualReset, BOOL bInitialState)		// WC3
145	int __stdcall Ordinal145(int a1)			// SC
145	int __thiscall SSyncObject::SSyncObject(void)		// WC3
146	signed int __stdcall Ordinal146(int a1, int a2)		// SC
146	int __fastcall CDebugSCritSect::~CDebugSCritSect(LPCRITICAL_SECTION lpCriticalSection)		// WC3
147	int __thiscall CDebugSRWLock::~CDebugSRWLock(void)		// WC3
148	int __thiscall CSRWLock::~CSRWLock(void)			// WC3
149	int __fastcall SCritSect::~SCritSect(LPCRITICAL_SECTION lpCriticalSection)		// WC3
150	nullsub	
151	int __stdcall Ordinal151(int, int)
152	int __thiscall SSyncObject::~SSyncObject(void)
153	static unsigned long __stdcall SFile::Close(class SFile *)
154	static int __fastcall SThread::Create(unsigned int (__stdcall *)(void *), void *, class SThread &, char *)
155	static void __stdcall SFile::CreateOverlapped(struct SOVERLAPPED *)
156	static void __stdcall SFile::DestroyOverlapped(struct SOVERLAPPED *)
157	static void __stdcall SFile::EnableHash(bool)
158	void __thiscall CDebugSCritSect::Enter(char const *, unsigned long)
159	void __thiscall CDebugSRWLock::Enter(int, char const *, unsigned long)
160	int __thiscall CSRWLock::Enter(__int32 *, int)
161	int __fastcall SCritSect::Enter(LPCRITICAL_SECTION lpCriticalSection)
162	int __stdcall SFile::FileExists(char *)
163	static int __stdcall SFile::GetActualFileName(class SFile *, char *, unsigned long)
164	static int __stdcall SFile::GetBasePath(char *, unsigned long)
165	int __stdcall SFile::GetFileSize(int, LPDWORD lpFileSizeHigh)
166	void __thiscall CDebugSCritSect::Leave(char const *, unsigned long)
167	void __thiscall CDebugSRWLock::Leave(int, char const *, unsigned long)
168	void __thiscall CSRWLock::Leave(int)
169	int __fastcall SCritSect::Leave(LPCRITICAL_SECTION lpCriticalSection)
170	static unsigned long __stdcall SFile::Load(class SArchive *, char const *, void * *, unsigned long *, unsigned long, unsigned long, struct SOVERLAPPED *)
171	static unsigned long __stdcall SFile::LoadFile(char const *, void * *, unsigned long *, unsigned long, struct SOVERLAPPED *)
172	static unsigned long __stdcall SFile::Open(char const *, class SFile * *)
173	static int __stdcall SFile::PollOverlapped(struct SOVERLAPPED *)
174	int __stdcall SFile::Read(int, void *lpBuffer, size_t nNumberOfBytesToRead, int, int, int)
175	int __thiscall SEvent::Reset(void)
176	static void __stdcall SFile::ResetOverlapped(struct SOVERLAPPED *)
177	void *__fastcall SCreateThread(unsigned int (__stdcall *)(void *), void *, unsigned int *, void *, char *)
178	DWORD __stdcall SGetCurrentThreadId()
179	int __fastcall SGetCurrentThreadPriority()
180	__int64 __fastcall SInterlockedCompareExchange(__int64 *, const __int64 *, const __int64 *)
181	int __fastcall SInterlockedCompareExchangePointer(void **Destination, void *Exchange, void *Comperand)
182	__int32 __fastcall SInterlockedDecrement(long *)
183	__int32 __fastcall SInterlockedExchange(long *, long)
184	__int64 __fastcall SInterlockedExchange(__int64 *, __int64 const &)
185	__int32 __fastcall SInterlockedIncrement(long *)
186	__int64 __fastcall SInterlockedRead(const __int64 const *)
187	int __fastcall SSetCurrentThreadPriority(int nPriority)
188	int __thiscall SEvent::Set(void)
189	static int __stdcall SFile::SetBasePath(char const *)
190	int __stdcall SFile::SetFilePointer(SFile *, long lDistanceToMove, long *, ulong dwMoveMethod)
191	static int __stdcall SFile::Unload(void *)
192	int __stdcall SSyncObject::Wait(ulong dwMilliseconds)
193	int __stdcall WaitMultiplePtr(BOOL bWaitAll, DWORD dwMilliseconds)
194	static void __stdcall SFile::WaitOverlapped(struct SOVERLAPPED *)

201	HDC __stdcall Ordinal201(HWND hWnd, LPPAINTSTRUCT lpPaint)
202	int __stdcall Ordinal202(HWND hWnd, HRGN a2, HGDIOBJ a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
203	signed int __cdecl Ordinal203()
204	int __stdcall Ordinal204(HINSTANCE hInstance, int a2, HWND hWndParent, LPVOID hWnd, LPARAM lParam)
205	int __stdcall Ordinal205(HMODULE hModule, LPCSTR lpName, HWND hWndParent, LPVOID hWnd, LPARAM lParam)
206	HGDIOBJ __stdcall Ordinal206(HWND hDlg, signed int DlgType, HDC textLabel, HWND hWnd)

208	LPARAM __stdcall Ordinal208(HINSTANCE hInstance, int a2, HWND hWndParent, LPVOID hWnd, LPARAM lParam)
209	LPARAM __stdcall Ordinal209(HMODULE hModule, LPCSTR lpName, HWND hWndParent, LPVOID hWnd, LPARAM lParam)
210	signed int __stdcall Ordinal210(HWND hWnd, HGDIOBJ a2, HRGN a3, int a4, int a5, int a6, int a7)			// Move/Resize Window
211	BOOL __stdcall Ordinal211(HWND hDlg, int nResult)
212	BOOL __cdecl Ordinal212(HWND hWnd, const PAINTSTRUCT *lpPaint)
213	signed int __stdcall Ordinal213(int a1, int a2)
214	signed int __stdcall Ordinal214(int val0x00, int val0x04, int val0x08, int val0x0C, void *src)
215	int __stdcall Ordinal215(int a1, int a2, char *a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
216	signed int __stdcall Ordinal216(HWND hWnd, signed int pointXY, _UNKNOWN *a3, int a4, signed int a5, signed int a6, int a7)
217	signed int __stdcall Ordinal217(HWND hWnd, LONG dwNewLong, int a3, int a4)     // todo with storm form controls; Button, Listbox, Scrollbar, ComboBox, etc
218	signed int __stdcall Ordinal218(int a1, int a2, int a3, signed int a4)
219	int __stdcall Ordinal219(int a1, int a2, int a3, int a4)
220	int __cdecl Ordinal220()
221	signed int __stdcall Ordinal221(HWND hWnd, HRGN a2, char *a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
222	signed int __stdcall Ordinal222(int a1, int a2, char *src, int a4, int a5, int a6, int a7, signed int a8, int a9, signed int a10)
223	int __stdcall Ordinal223(int a1, char *a2)

251	signed int __stdcall SFileAuthenticateArchive(HANDLE hArchive, int a2)
252	BOOL __stdcall SFileCloseArchive(HANDLE hArchive)
253	BOOL __stdcall SFileCloseFile(HANDLE hFile)
254	int __stdcall Ordinal254(int, int, int)
255	signed int __stdcall Ordinal255(HANDLE hFile, signed int a2, unsigned int a3, unsigned __int32 lDistanceToMove, signed int a5, signed int a6, int a7)
256	signed int __cdecl Ordinal256()
257	signed int __stdcall Ordinal257(int a1)
258	signed int __stdcall Ordinal258(int a1, int a2, int a3)
259	signed int __stdcall Ordinal259(int a1, int a2, int a3)
260	signed int __stdcall Ordinal260(HANDLE)
261	signed int __stdcall Ordinal261(int a1, signed int a2, signed int a3)
262	signed int __cdecl SFileDestroy()
263	signed int __stdcall Ordinal263(int a1)
264	BOOL __stdcall SFileGetFileArchive(HANDLE hFile, HANDLE hArchive)
265	DWORD __stdcall SFileGetFileSize(HANDLE hFile, LPDWORD lpFileSizeHigh)
266	BOOL __stdcall SFileOpenArchive(char *name, DWORD dwPriority, DWORD dwFlags, HANDLE *hArchive)
267	BOOL __stdcall SFileOpenFile(char *fileName, HANDLE *hFile)
268	BOOL __stdcall SFileOpenFileEx(HANDLE hArchive, char *fileName, char mode, HANDLE *hFile)
269	BOOL __stdcall SFileReadFile(HANDLE hFile, void *buffer, int toRead, int *read, LONG lpDistanceToMoveHigh)
270	BOOL __stdcall SFileSetBasePath(char *path)
271	LONG __stdcall SFileSetFilePointer(HANDLE hFile, LONG filePos, LONG *filePosHigh, DWORD dwMethod)
272	LCID __stdcall SFileSetLocale(LCID lcLocale)
273	BOOL __stdcall SFileGetBasePath(char *result, int maxSize)
274	BOOL __stdcall Ordinal274(int a1, int a2)
275	BOOL __stdcall SFileGetArchiveName(HANDLE hArchive, char *name, int length)
276	BOOL __stdcall SFileGetFileName(HANDLE hFile, char *name, int length)
277	signed int __stdcall Ordinal277(int a1, int a2, int a3)
278	char __stdcall Ordinal278(char)
279	int __stdcall Ordinal279(HANDLE hFile, int a2, int a3, int a4, LONG lpDistanceToMoveHigh)
280	BOOL __stdcall Ordinal280(void *location)
281	bool __stdcall Ordinal281(void *hArchive, HANDLE hFile, int a3, int a4, int a5, DWORD searchScope, struct _OVERLAPPED *lpOverlapped)
282	void __stdcall Ordinal282(int a1, int a2)
283	void __stdcall Ordinal283(int a1)
284	int __stdcall Ordinal284(int a1)
285	void __stdcall Ordinal285(int a1)
286	int __stdcall Ordinal286(int)
287	int __stdcall Ordinal287(int, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, int, DWORD NumberOfBytesRead, int)
288	int __stdcall Ordinal288(int)
289	int __stdcall Ordinal289(int, int, int, int, LONG lpDistanceToMoveHigh, int, int)
290	int __stdcall Ordinal290(int, int, int, int, int, int, LONG lpDistanceToMoveHigh, int)
291	int __stdcall Ordinal291(int, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, int, DWORD NumberOfBytesRead, int, int)
292	int __stdcall Ordinal292(int, int, int, int, int, int, DWORD NumberOfBytesRead, int)
293	int __stdcall Ordinal293(int, char *RootPathName, int, int, int)
294	LCID __cdecl SFileGetLocale()
295	int __stdcall Ordinal295(int, int)
296	int __stdcall Ordinal296(int, int)
297	int __stdcall Ordinal297(int, int, int)
298	nullsub
299	int __stdcall SFileAuthenticateArchiveEx(HANDLE hArchive, int, int, LONG lDistanceToMove, int, DWORD NumberOfBytesRead)
300	int __stdcall Ordinal300(int, int, int, int, int)
301	BOOL __cdecl StormDestroy()
302	HMODULE __cdecl StormGetModule()
303	BOOL __stdcall Ordinal303(int type, int a2, int a3)
304	BOOL __stdcall Ordinal304(int type, int a2, signed int a3)

312	bool __stdcall Ordinal312(unsigned int a1, int a2, unsigned int a3, int a4)
313	int __stdcall SBltROP3(int, int, int, int, int, int, int, int)
314	signed int __stdcall Ordinal314(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
315	signed int __stdcall Ordinal315(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)

321	int __stdcall SBmpDecodeImage(int a1, signed int *a2, unsigned int a3, int a4, int a5, int a6, int a7, int a8, int a9)

323	int __stdcall SBmpLoadImage(const char *fileName, int a2, int a3, int a4, int a5, int a6, int a7)
324	int __stdcall SBmpSaveImage(LPCSTR lpFileName, int a2, LPCVOID lpBuffer, int a4, int a5, int a6)
325	HANDLE __stdcall SBmpAllocLoadImage(const char *fileName, int a2, int a3, int a4, int a5, int a6, int a7, int (__stdcall *a8)(_DWORD))
326	int __stdcall SBmpSaveImageEx(LPCSTR lpFileName, int a2, LPCVOID lpBuffer, int a4, int a5, signed int a6, int a7)

331	signed int __stdcall SCodeCompile(char *directives1, char *directives2, int a3, unsigned int a4, unsigned int flags, char *src)
332	BOOL __stdcall SCodeDelete(int a1)

334	int __cdecl Ordinal334(int, int)
335	BOOL __stdcall SCodeGetPseudocode(int a1, int a2, unsigned int a3)

341	BOOL __stdcall SDrawVidDriverInitialize(HINSTANCE hWnd, LPCSTR lpClassName, LPCSTR lpWindowName, int (__stdcall *a4)(HWND, UINT, WPARAM, LPARAM), signed int a5, int nWidth, int nHeight, int a8)
342	BOOL __stdcall SDrawCaptureScreen(char *path)
343	BOOL __stdcall SDrawShowCursor(int type)
344	int __cdecl SDrawDestroy()
345	BOOL __cdecl Ordinal345()
346	HWND __stdcall Ordinal346(int a1)
347	bool __stdcall Ordinal347(int a1, int a2, int a3, int a4, int a5, int a6, int a7)
348	bool __stdcall Ordinal348(int a1, int a2, int a3) 		// get screen width/height ??
349	BOOL __stdcall Ordinal349(int a1)
350	BOOL __stdcall StormSurfaceLock(int SurfaceNumber, RECT *lpDestRect, void **lplpSurface, int *lpPitch, int arg_unused)
351	BOOL __stdcall Ordinal351(HWND hWnd, int a2, int a3, int a4, int a5, int a6, int a7, HPALETTE a8)
352	int __stdcall Ordinal352(LPCSTR lpText, LPCSTR lpCaption, UINT uType)
353	HWND __cdecl Ordinal353()
354	bool __cdecl Ordinal354()
355	int __stdcall Ordinal355(int, int)
356	BOOL __stdcall StormSurfaceUnlock(int zero0, void *lpSurface, int zero1, int zero2)
357	bool __stdcall Ordinal357(signed int a1, int a2, int a3, int a4)
358	signed int __userpurge Ordinal358<eax>(int a1<edi>, int arg0)
359	int Ordinal359()

372	BOOL __stdcall SEvtDispatch(int a1, int a2, int a3, int a4)
373	BOOL __stdcall SEvtRegisterHandler(signed int a1, unsigned int a2, int event, int a4, int a5)
374	BOOL __stdcall Ordinal374(int a1, int a2, int a3, int a4)
375	BOOL __stdcall SEvtUnregisterType(int a1, int a2)
376	BOOL __stdcall Ordinal376(int a1, int type)
377	BOOL __stdcall Ordinal377(int a1, int type)
378	BOOL __stdcall Ordinal378(int a1)

381	int __stdcall Ordinal381(int, int, int, int, int, int, int, int, int)
382	int __stdcall SGdi1(int, int, int, int, int, int, int, int)
383	int __stdcall SGdi2(int)

385	int __stdcall Ordinal385(int, int, int, int, int, int, int, int, int)
386	int __stdcall Ordinal386(HGDIOBJ, int)
387	int __stdcall Ordinal387(char *, int, int, int, int, int)
388	int __stdcall Ordinal388(int, int, int, int, int, int)
389	int __stdcall Ordinal389(int)
390	int __stdcall Ordinal390(int)
391	int __stdcall Ordinal391(int, int, int, int, int, int)
392	int __stdcall SGdi4(int, int, int, int)
393	int __stdcall Ordinal393(int, int, int)

399	int __cdecl Ordinal399(int, int, int, int, int)

401	void *__stdcall SMemAlloc(int amount, char *filename, int line, int defaultValue)

403	int __stdcall SMemFree(void *location, char *filename, int line, int defaultValue)
404	int __stdcall SMemGetSize(int, char, DWORD ExitCode)
405	int __stdcall SMemReAlloc(int, int, int, DWORD ExitCode, int)
406	int __stdcall Ordinal406(int, int, int)

412	int __stdcall Ordinal412(int, int, int, int, int, int)
413	int __stdcall Ordinal413(int, int)
414	int __stdcall Ordinal414(int, int, int)
415	int __stdcall Ordinal415(int, int, int)
416	int __stdcall Ordinal416(int, int, int)
417	int __stdcall Ordinal417(int, int, int)
418	int __stdcall Ordinal418(int)
419	int __stdcall Ordinal419(int)
420	BOOL __stdcall Ordinal420(int a1, int a2, int a3)
421	int __stdcall SRegLoadData(HKEY hKey, LPCSTR lpValueName, HKEY phkResult, LPBYTE lpData, int, DWORD lpcbData)	// Read REG_MULTI_SZ from HKEY_LOCAL_MACHINE
422	int __stdcall Ordinal422(DWORD cbData, LPCSTR lpValueName, HKEY phkResult, LPBYTE lpData, size_t resultSize) 	// REG_SZ as char* FROM HKEY_LOCAL_MACHINE
423	int __stdcall SRegQueryValue(DWORD cbData, LPCSTR lpValueName, HKEY hKey, char *result)		// REG_DWORD as char*    // READ KEY FROM HKEY_LOCAL_MACHINE
424	int __stdcall Ordinal424(char *hKey, LPCSTR lpValueName, BYTE flags, BYTE *lpData, DWORD cbData)	// REG_MULTI_SZ    // CREATE KEY
425	int __stdcall Ordinal425(char *hKey, LPCSTR lpValueName, BYTE flags, BYTE *lpData)		// REG_SZ as BYTE*    // CREATE KEY
426	int __stdcall Ordinal426(char *hKey, LPCSTR lpValueName, BYTE flags, DWORD result)		// REG_DWORD as DWORD    // CREATE KEY
427	BOOL __stdcall Ordinal427(char flags, char *dest, int length)				// Gets subkey names
428	BOOL __stdcall Ordinal428(HKEY hKey, LPCSTR lpValueName, HKEY phkResult)			// REG_MULTI_SZ   // read key
429	BOOL __stdcall Ordinal429(HKEY hKey, DWORD cbName, DWORD dwIndex, char *, size_t)		// read key
430	BOOL __stdcall Ordinal430(HKEY hKey, int, DWORD cSubKeys)
431	BOOL __stdcall Ordinal431(int, int, int, int, int)
432	int __stdcall Ordinal432(int, int, int, int, int)
433	int __stdcall Ordinal433(int, int, int, int, int, int, int)
434	int __stdcall STrans1(int)

436	int __stdcall STrans2(int, int)
437	int __stdcall STrans4(int, int, char, int)
438	int __stdcall STrans3(int, int)
439	int __stdcall STransLoadI(char *, int, int, int)
440	int __stdcall STrans7(int, int, int, int)
441	int __stdcall Ordinal441(int, char, int, int, int, int)
442	int __stdcall Ordinal442(int, int, int, char *, size_t)
443	int __stdcall STrans5(int, int, int, int, int, int)
444	int __stdcall Ordinal444(int, int, int, int, int, int, int)
445	int __stdcall Ordinal445(int, int, int, int, int, int, int)
446	int __stdcall Ordinal446(int, int, int, int, int, int, int)
447	int __stdcall STransLoadE(char *, int, int, int)

451	int SVidDestroy()
452	int __stdcall Ordinal452(int, int, int, int)
453	int __stdcall SVidInitialize(int)
454	int __stdcall SVidPlayBegin(char *, int, int, int, int, int, int)
455	int __stdcall SVidPlayBeginFromMemory(LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, int, int, int, int, DWORD NumberOfBytesWritten, int)
456	int SVidPlayContinue()
457	int __stdcall SVidPlayContinueSingle(int, int, int)
458	int __stdcall Ordinal458(int)  	// ?
459	int __stdcall Ordinal459(int, int, int, int)
460	int __stdcall Ordinal460(int)
461	int __stdcall SErrDisplayError(DWORD dwMessageId, char, DWORD ExitCode, char, int, UINT uExitCode)
462	int __stdcall SErrGetErrorStr(DWORD dwMessageId, LPSTR lpBuffer, DWORD nSize)
463	int SErrGetLastError()
464	int __stdcall Ordinal464(__int16, int, int)
465	int __stdcall SErrSetLastError(DWORD dwErrCode)
466	int __stdcall Ordinal466(int, int)
467	int __stdcall Ordinal467(int)
468	int __stdcall Ordinal468(int)
469	int __stdcall Ordinal469(int)
470	int __stdcall Ordinal470(int)
471	int __stdcall Ordinal471(int, int, int)
472	int __stdcall Ordinal472(int)
473	int __stdcall Ordinal473(int)
474	int __stdcall Ordinal474(int, int, int)
475	int __stdcall Ordinal475(int, int, int, int)
476	int __stdcall Ordinal476(int, int)
477	int __stdcall Ordinal477(int, int, int, int, int, int, int, int)
478	int __stdcall Ordinal478(int)
479	int __stdcall Ordinal479(int, int)
480	int __stdcall Ordinal480(int, int)
481	int __stdcall SMemFindNextBlock(int, int, int, int)
482	int __stdcall SMemFindNextHeap(int, int, int)
483	int __stdcall SMemGetHeapByCaller(int, int)
484	int __stdcall SMemGetHeapByPtr(int)
485	int __stdcall SMemHeapAlloc(int, int, int)
486	int __stdcall SMemHeapCreate(int, int, int, char, DWORD ExitCode)
487	int __stdcall SMemHeapDestroy(int)
488	int __stdcall SMemHeapFree(int, int, int)
489	int __stdcall SMemHeapRealloc(int, int, int, int)
490	int __stdcall SMemHeapSize(int, int, int)
491	int __stdcall SMemCpy(int, int, int)
492	int __stdcall Ordinal492(int, int, char)
493	int __stdcall Ordinal493(void *, void *, size_t)
494	int __stdcall SMemZero(void *location, size_t length)
495	int __stdcall Ordinal495(int, int, int)
496	int __stdcall Ordinal496(int, char)
497	int __stdcall SMemDumpState(int, int)
498	nullsub

501	int __stdcall SStrNCpy(char *dst, char *src, int size)
502	DWORD __stdcall SStrHash(LPCSTR String, BOOLEAN IsFilename, DWORD Seed)
503	int __stdcall SStrNCat(char *base, char *new, int max_length)
504	int __stdcall Ordinal504(int, int, int, char *, int)
505	int __stdcall Ordinal505(int, int, int)
506	int __stdcall SStrLen(char* str)
507	int __stdcall Ordinal507(int, char, DWORD ExitCode)
508	int __stdcall SStrCmp(char *str1, char *str2, size_t size)
509	int __stdcall SStrCmpI(char *str1, char *str2, size_t size)
510	int __stdcall SStrUpr(char *str)
511	int __stdcall Ordinal511(int)
512	int __stdcall Ordinal512(int, int, int)
513	int __stdcall Ordinal513(int, int, int)
514	int __stdcall Ordinal514(int, int, int)
515	int __stdcall Ordinal515(int, int, int)
516	int __stdcall Ordinal516(int)
517	int __stdcall Ordinal517(int)
518	int Ordinal518()
519	int __stdcall Ordinal519(int, int, int)

521	int __stdcall Ordinal521(int)

523	int __stdcall Ordinal523(int, int, int, int)
524	int __stdcall Ordinal524(int, int)
525	int __stdcall Ordinal525(int)

527	int __stdcall Ordinal527(int, int, int)
528	int __stdcall Ordinal528(int, int, int, int)
529	int __stdcall Ordinal529(int, int, int)
530	int __stdcall Ordinal530(int, int)
531	int __stdcall Ordinal531(int, int, int)
532	int __stdcall Ordinal532(int, int)
533	int __stdcall Ordinal533(int, int, int)
534	int __stdcall Ordinal534(int, int, int, int)
535	int __stdcall Ordinal535(int, int, int, int)
536	int __stdcall Ordinal536(int, int, int)
537	int __stdcall Ordinal537(int, int)
538	int __stdcall Ordinal538(int, float, float)
539	int __stdcall Ordinal539(int, int)
540	int __stdcall Ordinal540(int, float, float)
541	int __stdcall Ordinal541(DWORD NumberOfBytesWritten)
542	int __stdcall Ordinal542(LPCSTR lpFileName, int, int)
543	int __stdcall Ordinal543(int, int)
544	int __stdcall Ordinal544(int, int, DWORD NumberOfBytesWritten)
545	int __stdcall Ordinal545(DWORD NumberOfBytesWritten)
546	int Ordinal546()
547	int __cdecl Ordinal547(int, char *, char)
548	int __cdecl Ordinal548(DWORD NumberOfBytesWritten, char *, char NumberOfBytesWritten)  // Add to log file
549	int __stdcall Ordinal549(int, int)
550	int __stdcall Ordinal550(int, int)
551	int __stdcall Ordinal551(int, int, int, int, int, char, int)
552	int __stdcall Ordinal552(int, int, int, int)
553	int __stdcall Ordinal553(int, char *, va_list NumberOfBytesWritten)
554	nullsub2
555	nullsub2
556	nullsub2
557	nullsub3
558	nullsub2
559	nullsub
560	nullsub
561	int __cdecl Ordinal561(char *, char)
562	int __cdecl Ordinal562(DWORD dwMessageId, char, DWORD ExitCode, int, UINT uExitCode, char *, char)
563	int Ordinal563()
564	int __stdcall Ordinal564(int, int)
565	int __stdcall Ordinal565(int)
566	int __stdcall Ordinal566(int)
567	int Ordinal567()
568	int __stdcall Ordinal568(int)
569	char *__fastcall SStrChr(char *str,char c) 		// Returns the substring after the first occurance of the specific character in the string.  Returns NULL if the character is not found.
570	char *__fastcall SStrChrR(const char *str,char c) 	// Returns the address of the final occurance of c within the string str.  If it is not found, NULL is returned.
571	char *__stdcall SStrChr(char *str, char c) 		// Returns the substring after the first occurance of the specific character in the string.  Returns NULL if the character is not found.
572	char *__stdcall SStrChrR(const char *str,char c)	// Returns the address of the final occurance of c within the string str.  If it is not found, NULL is returned.
573	int __stdcall Ordinal573(int)
574	int __stdcall Ordinal574(int)
575	int __stdcall Ordinal575(int)
576	int __stdcall Ordinal576(int)
577	int __stdcall Ordinal577(int)
578	int __cdecl SStrPrintf(char *str, size_t size, char *format, char)
579	int __stdcall SStrLwr(char *str)
580	int __stdcall Ordinal580(int, int, int, int)
581	int __cdecl Ordinal581(char *, size_t, char *, va_list)
582	int __stdcall Ordinal582(int)
583	int __stdcall Ordinal583(LPRECT lpRect)
584	int __stdcall Ordinal584(HKEY hKey, HKEY phkResult)
585	int __stdcall Ordinal585(int, char *)
586	int __stdcall Ordinal586(int, int)
587	int __stdcall Ordinal587(int, int)
588	int __stdcall Ordinal588(char *, char *)
589	int __fastcall Ordinal589(char *, char *)
590	int __stdcall Ordinal590(int)
591	int Ordinal591()
592	int __fastcall Ordinal592(char *)
593	int __stdcall Ordinal593(int, int, int)
594	int __stdcall Ordinal594(int, int, int)
595	int __stdcall Ordinal595(int, int, int, char)
596	int __fastcall Ordinal588(char *, char *)
597	int __fastcall Ordinal589(char *, char *)
598	int __stdcall Ordinal598(int)

601	int __stdcall SBigAdd(int, int, int)
602	int __stdcall SBigAnd(int, int, int)
603	int __stdcall SBigCompare(BigBuffer buf1, BigBuffer buf2)
604	int __stdcall SBigCopy(int, int)
605	int __stdcall SBigDec(int, int)
606	int __stdcall SBigDel(BigBuffer buf)
607	int __stdcall SBigDiv(int, int, int)
608	int __stdcall SBigFindPrime(int, int, int, int)
609	int __stdcall SBigFromBinary(BigBuffer *buf, const void *str, unsigned int num)
610	int __stdcall SBigFromStr(int, int)
611	int __stdcall SBigFromStream(int, int, int, int)
612	int __stdcall SBigFromUnsigned(BigBuffer buf,unsigned int value)
613	int __stdcall SBigGcd(int, int, int)
614	int __stdcall SBigInc(int, int)
615	int __stdcall SBigInvMod(int, int, int)
616	int __stdcall SBigIsEven(BigBuffer buf)
617	int __stdcall SBigIsOdd(BigBuffer buf)
618	int __stdcall SBigIsOne(BigBuffer buf)
619	int __stdcall SBigIsPrime(BigBuffer buf)
620	int __stdcall SBigIsZero(BigBuffer buf)
621	int __stdcall SBigMod(int, int, int)
622	int __stdcall SBigMul(int, int, int)
623	int __stdcall SBigMulMod(int, int, int, int)
624	int __stdcall SBigNew(BigBuffer **Buffer)
625	int __stdcall SBigNot(int, int)
626	int __stdcall SBigOr(int, int, int)
627	int __stdcall SBigPow(int, int, int)
628	int __stdcall SBigPowMod(int, int, int, int)
629	int __stdcall SBigRand(int, int, int)
630	int __stdcall SBigSet2Exp(int, int)
631	int __stdcall SBigSetOne(BigBuffer *buf)
632	int __stdcall SBigSetZero(BigBuffer *buf)
633	int __stdcall SBigShl(int, int, int)
634	int __stdcall SBigShr(int, int, int)
635	int __stdcall SBigSquare(int, int)
636	int __stdcall SBigSub(int, int, int)
637	int __stdcall SBigToBinaryArray(int, int, int)
638	int __stdcall SBigToBinaryBuffer(int, int, int, int)
639	int __stdcall SBigToBinaryPtr(int, int, int)
640	int __stdcall SBigToStrArray(int, int, int)
641	int __stdcall SBigToStrBuffer(int, char *dst, int count)
642	int __stdcall SBigToStrPtr(int, int)
643	int __stdcall SBigToStreamArray(int, int, int)
644	int __stdcall SBigToStreamBuffer(int, int, int, int)
645	int __stdcall SBigToStreamPtr(int, int, int)
646	int __stdcall SBigToUnsigned(int, int)
647	int __stdcall SBigXor(int, int, int)
648	int __stdcall SSignatureVerify(int, int, int, int)
649	int __stdcall SSignatureVerifyStream_Begin(int)
650	int __stdcall SSignatureVerifyStream_ProvideData(int)
651	int __thiscall SSignatureVerifyStream_Finish(int, int)
652	int __stdcall SSignatureGenerate(int, int, int, int, int, int)
653	int SSignatureVerifyStream_GetSignatureLength()
654	int __stdcall Ordinal654(int, int)

901	int __stdcall Ordinal901(int, int, int)
902	int __stdcall Ordinal902(int, int, int, int, int, int)
903	int __stdcall Ordinal903(int, int, int)
904	int __stdcall Ordinal904(int, int, int, int, int, int)
905	int __stdcall Ordinal905(int, int)
906	int __stdcall Ordinal906(int, int)
907	int __stdcall Ordinal907(int, int)
908	int __stdcall Ordinal908(int, int)
909	int __stdcall Ordinal909(int, int, int)
910	int __stdcall Ordinal910(int, int, int)
911	int __stdcall Ordinal911(int, int, int)
912	int __stdcall Ordinal912(int, int, int)
913	int __stdcall Ordinal913(int, int, int)
914	int __stdcall Ordinal914(int, int, int)
}}}