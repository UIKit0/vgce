#summary Storm.dll Functions and their Ordinals
#labels Type-List,Game-Starcraft,Game-Warcraft2,Game-Diablo,Game-Diablo2,Game-Warcraft3,Game-WoW,Platform-PC

{{{
101	BOOL	__stdcall SNetCreateGame(char *Source, char *a2, char *a3, int a4, size_t Size, int a6, char *a7, char *a8, int *playerid)
102	BOOL	__cdecl   SNetDestroy()
103	BOOL 	__stdcall SNetDropPlayer(signed int a1, int a2)
104	BOOL	__stdcall SNetEnumDevices(int (__stdcall *a1)(_DWORD, _DWORD, _DWORD))
105	BOOL	__stdcall SNetEnumGames(int (__stdcall *a1)(_DWORD, _DWORD, _DWORD), int *hintnextcall)
106	BOOL	__stdcall SNetEnumProviders(int mincaps, int (__stdcall *a2)(_DWORD, _DWORD, _DWORD, _DWORD))
107	BOOL	__stdcall SNetGetGameInfo(int type, void *src, unsigned int length, int *byteswritten)
108	BOOL	__stdcall SNetGetNetworkLatency(signed int a1, int *result)
109	BOOL	__stdcall SNetGetNumPlayers(int *firstplayerid, int *lastplayerid, int *activeplayers)
110	BOOL	__stdcall SNetGetOwnerTurnsWaiting(int *turns)
111	BOOL 	__stdcall SNetGetPerformanceData(int a1, int *countervalue, int *countertype, int *counterscale, LPFILETIME *measurementtime, int *measurementfreq)
112	BOOL 	__stdcall SNetGetPlayerCaps(char a1, int *caps)
113	BOOL 	__stdcall SNetGetPlayerName(int a1, char *Dest, size_t Count)
114	BOOL 	__stdcall SNetGetProviderCaps(void *caps)
115	BOOL 	__stdcall SNetGetTurnsInTransit(int *turns)
116	BOOL	__stdcall SNetInitializeDevice(int a1, int a2, int a3, int a4, int a5)
117	BOOL 	__stdcall SNetInitializeProvider(int a1, int a2, int a3, int a4, DWORD ThreadID)
118	BOOL	__stdcall SNetJoinGame(int a1, char *a2, char *a3, char *playerName, char *a5, int *playerid)
119	BOOL 	__stdcall SNetLeaveGame(int type)
120	BOOL 	__stdcall SNetPerformUpgrade(DWORD *upgradestatus)
121	BOOL	__stdcall SNetReceiveMessage(int *senderplayerid, int *data, int *databytes)
122	BOOL	__stdcall SNetReceiveTurns(unsigned int a1, int a2, void *arraydata, void *arraydatabytes, void *arrayplayerstatus)
123	int 	__stdcall SNetRegisterEventHandler(int event, int size)
124	BOOL	__cdecl   SNetResetLatencyMeasurements()
125	int	__stdcall SNetSelectGame(int a1, int a2, int a3, int a4, int a5, int *playerid)
126	BOOL	__stdcall SNetSelectProvider(LPARAM lparam, int a2, int a3, int a4, int a5, int *providerid)
127	BOOL	__stdcall SNetSendMessage(signed int a1, int a2, int a3)
128	BOOL	__stdcall SNetSendTurn(void *buffer, int size)
129	BOOL	__stdcall SNetSetBasePlayer(int a1)
130	BOOL	__stdcall SNetSetGameMode(int a1)
131	int	__stdcall SNetUnregisterEventHandler(int a3, int a4)
132	int 		__fastcall CDebugSCritSect::CDebugSCritSect(LPCRITICAL_SECTION lpCriticalSection)
133	signed int 	__stdcall Ordinal133(int a1, int a2, int (__fastcall *a3)(_DWORD, _DWORD, _DWORD), int a4)
134	int 		__stdcall Ordinal134(int a1)
135	signed int 	__stdcall Ordinal135(signed int a1, int a2, int a3)
136	signed int 	__stdcall Ordinal136(int a1, int a2, int a3)
137	signed int 	__stdcall Ordinal137(int a1)
138	signed int 	__stdcall Ordinal138(int a1, int a2, int a3, int a4, int a5, int a6, const void *MemSrc, int MemSize, int a9, char *playerName, int a11, int a12)
139	signed int 	__stdcall Ordinal139(unsigned int a1, int size, int a3, int a4, int a5)
140	bool 		__stdcall Ordinal140(int a1, int a2, int a3, int a4)
141	int 		__stdcall Ordinal141(char *path, int a2)		// SC
141	int 		__thiscall CDebugSRWLock::CDebugSRWLock(void)	// WC3
142	int 		__stdcall Ordinal142(int a1, int a2, int a3)	// SC
142	int 		__thiscall CSRWLock::CSRWLock(void)			// WC3
143	int 		__stdcall Ordinal143(int a1)			// SC
143	int 		__fastcall SCritSect::SCritSect(LPCRITICAL_SECTION lpCriticalSection)	// WC3
144	signed int 	__stdcall Ordinal144(int a1)						// SC
144	int 		__stdcall SEvent::SEvent(BOOL bManualReset, BOOL bInitialState)		// WC3
145	int 		__stdcall Ordinal145(int a1)			// SC
145	int 		__thiscall SSyncObject::SSyncObject(void)		// WC3
146	signed int 	__stdcall Ordinal146(int a1, int a2)		// SC
146	int 		__fastcall CDebugSCritSect::~CDebugSCritSect(LPCRITICAL_SECTION lpCriticalSection)		// WC3
147	int 		__thiscall CDebugSRWLock::~CDebugSRWLock(void)		// WC3
148	int 		__thiscall CSRWLock::~CSRWLock(void)			// WC3
149	int 		__fastcall SCritSect::~SCritSect(LPCRITICAL_SECTION lpCriticalSection)		// WC3
150	nullsub	
151	int 		__stdcall Ordinal151(int, int)
152	int 		__thiscall SSyncObject::~SSyncObject(void)
153	static unsigned long __stdcall SFile::Close(class SFile *)
154	static int 	__fastcall SThread::Create(unsigned int (__stdcall *)(void *), void *, class SThread &, char *)
155	static void 	__stdcall SFile::CreateOverlapped(struct SOVERLAPPED *)
156	static void 	__stdcall SFile::DestroyOverlapped(struct SOVERLAPPED *)
157	static void 	__stdcall SFile::EnableHash(bool)
158	void 		__thiscall CDebugSCritSect::Enter(char const *, unsigned long)
159	void 		__thiscall CDebugSRWLock::Enter(int, char const *, unsigned long)
160	int 		__thiscall CSRWLock::Enter(__int32 *, int)
161	int 		__fastcall SCritSect::Enter(LPCRITICAL_SECTION lpCriticalSection)
162	int 		__stdcall SFile::FileExists(char *)
163	static int 	__stdcall SFile::GetActualFileName(class SFile *, char *, unsigned long)
164	static int 	__stdcall SFile::GetBasePath(char *, unsigned long)
165	int 		__stdcall SFile::GetFileSize(int, LPDWORD lpFileSizeHigh)
166	void 		__thiscall CDebugSCritSect::Leave(char const *, unsigned long)
167	void 		__thiscall CDebugSRWLock::Leave(int, char const *, unsigned long)
168	void 		__thiscall CSRWLock::Leave(int)
169	int 		__fastcall SCritSect::Leave(LPCRITICAL_SECTION lpCriticalSection)
170	static unsigned long __stdcall SFile::Load(class SArchive *, char const *, void * *, unsigned long *, unsigned long, unsigned long, struct SOVERLAPPED *)
171	static unsigned long __stdcall SFile::LoadFile(char const *, void * *, unsigned long *, unsigned long, struct SOVERLAPPED *)
172	static unsigned long __stdcall SFile::Open(char const *, class SFile * *)
173	static int 	__stdcall SFile::PollOverlapped(struct SOVERLAPPED *)
174	int 		__stdcall SFile::Read(int, void *lpBuffer, size_t nNumberOfBytesToRead, int, int, int)
175	int 		__thiscall SEvent::Reset(void)
176	static void 	__stdcall SFile::ResetOverlapped(struct SOVERLAPPED *)
177	void *		__fastcall SCreateThread(unsigned int (__stdcall *)(void *), void *, unsigned int *, void *, char *)
178	DWORD 		__stdcall SGetCurrentThreadId()
179	int 		__fastcall SGetCurrentThreadPriority()
180	__int64 	__fastcall SInterlockedCompareExchange(__int64 *, const __int64 *, const __int64 *)
181	int 		__fastcall SInterlockedCompareExchangePointer(void **Destination, void *Exchange, void *Comperand)
182	__int32 	__fastcall SInterlockedDecrement(long *)
183	__int32 	__fastcall SInterlockedExchange(long *, long)
184	__int64 	__fastcall SInterlockedExchange(__int64 *, __int64 const &)
185	__int32 	__fastcall SInterlockedIncrement(long *)
186	__int64 	__fastcall SInterlockedRead(const __int64 const *)
187	int 		__fastcall SSetCurrentThreadPriority(int nPriority)
188	int 		__thiscall SEvent::Set(void)
189	static int 	__stdcall SFile::SetBasePath(char const *)
190	int 		__stdcall SFile::SetFilePointer(SFile *, long lDistanceToMove, long *, ulong dwMoveMethod)
191	static int 	__stdcall SFile::Unload(void *)
192	int 		__stdcall SSyncObject::Wait(ulong dwMilliseconds)
193	int 		__stdcall WaitMultiplePtr(BOOL bWaitAll, DWORD dwMilliseconds)
194	static void 	__stdcall SFile::WaitOverlapped(struct SOVERLAPPED *)

201	HDC 	__stdcall SDlgBeginPaint(HWND hWnd, LPPAINTSTRUCT lpPaint)
202	int 	__stdcall SDlgBltToWindow(HWND hWnd, HRGN hrgnSrc2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
203	BOOL 	__cdecl SDlgCheckTimers()
204	int 	__stdcall SDlgCreateDialog(HMODULE hModule, LPCSTR lpName, HWND hWndParent, LPVOID lpParam)
205	int 	__stdcall SDlgCreateDialogIndirect(int a1, int a2, HWND hWndParent, LPVOID lpParam)
206	HGDIOBJ __stdcall SDlgDefDialogProc(HWND hDlg, signed int DlgType, HDC textLabel, HWND hWnd)
207	int 	__cdecl SDlgDestroy()
208	int 	__stdcall SDlgDialogBoxIndirectParam(int a1, int a2, HWND hWndParent, LPVOID lpParam, LPARAM lParam)
209	int 	__stdcall SDlgDialogBoxParam(HMODULE hModule, LPCSTR lpName, HWND hWndParent, LPVOID lpParam, LPARAM lParam)
210	int 	__stdcall SDlgDrawBitmap(HWND hWnd, HGDIOBJ a2, HRGN hrgnSrc2, int a4, int a5, int a6, int a7)
211	BOOL 	__stdcall SDlgEndDialog(HWND hDlg, HANDLE nResult)
212	BOOL 	__stdcall SDlgEndPaint(HWND hWnd, PAINTSTRUCT *lpPaint)
213	int 	__stdcall SDlgKillTimer(int a1, int a2)
214	int 	__stdcall SDlgSetBaseFont(int a1, int a2, int a3, int a4, char *Source)
215	int 	__stdcall SDlgSetBitmap(int a1, int a2, char *Str2, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
216	int 	__stdcall SDlgSetControlBitmaps(HWND hWnd, int a2, int a3, int a4, int a5, int arg14, int a7)
217	int 	__stdcall SDlgSetCursor(HWND hWnd, LONG dwNewLong, int a3, int a4)
218	int 	__stdcall SDlgSetSystemCursor(int a1, int a2, int a3, signed int a4)
219	int 		__stdcall SDlgSetTimer(int a1, int a2, int a3, int a4)
220	int 	__cdecl SDlgUpdateCursor()
221	int 	__stdcall Ordinal221(HWND hWnd, HRGN a2, char *a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
222	int 	__stdcall Ordinal222(int a1, int a2, char *src, int a4, int a5, int a6, int a7, signed int a8, int a9, signed int a10)
223	int 	__stdcall Ordinal223(int a1, char *a2)

251	int 	__stdcall SFileAuthenticateArchive(HANDLE hArchive, int a2)
252	BOOL 	__stdcall SFileCloseArchive(HANDLE hArchive)
253	BOOL 	__stdcall SFileCloseFile(HANDLE hFile)
254	int 	__stdcall SFileDdaBegin(HANDLE hFile, int a2, int a3)
255	int 	__stdcall SFileDdaBeginEx(HANDLE hFile, signed int a2, unsigned int a3, unsigned __int32 lDistanceToMove, signed int a5, signed int a6, int a7)
256	BOOL	__cdecl   SFileDdaDestroy()
257	BOOL	__stdcall SFileDdaEnd(int a1)
258	BOOL	__stdcall SFileDdaGetPos(int a1, int a2, int a3)
259	BOOL	__stdcall SFileDdaGetVolume(int a1, int a2, int a3)
260	BOOL 	__stdcall SFileDdaInitialize(HANDLE a1)
261	BOOL	__stdcall SFileDdaSetVolume(int a1, signed int a2, signed int a3)
262	BOOL	__cdecl   SFileDestroy()
263	BOOL 	__stdcall SFileEnableDirectAccess(int a1)
264	BOOL 	__stdcall SFileGetFileArchive(HANDLE hFile, HANDLE hArchive)
265	DWORD 	__stdcall SFileGetFileSize(HANDLE hFile, LPDWORD lpFileSizeHigh)
266	BOOL 	__stdcall SFileOpenArchive(char *name, DWORD dwPriority, DWORD dwFlags, HANDLE *hArchive)
267	BOOL 	__stdcall SFileOpenFile(char *fileName, HANDLE *hFile)
268	BOOL 	__stdcall SFileOpenFileEx(HANDLE hArchive, char *fileName, char mode, HANDLE *hFile)
269	BOOL 	__stdcall SFileReadFile(HANDLE hFile, void *buffer, DWORD nNumberOfBytesToRead, int *read, LONG lpDistanceToMoveHigh)
270	BOOL 	__stdcall SFileSetBasePath(char *path)
271	LONG 	__stdcall SFileSetFilePointer(HANDLE hFile, LONG filePos, LONG *filePosHigh, DWORD dwMethod)
272	LCID 	__stdcall SFileSetLocale(LCID lcLocale)
273	BOOL 	__stdcall SFileGetBasePath(char *result, int maxSize)
274	BOOL 	__stdcall Ordinal274(int a1, int a2)
275	BOOL 	__stdcall SFileGetArchiveName(HANDLE hArchive, char *name, int length)
276	BOOL 	__stdcall SFileGetFileName(HANDLE hFile, char *name, int length)
277	int 	__stdcall Ordinal277(int a1, int a2, int a3)
278	char 	__stdcall Ordinal278(char)
279	int 	__stdcall Ordinal279(HANDLE hFile, int a2, int a3, int a4, LONG lpDistanceToMoveHigh)
280	BOOL 	__stdcall Ordinal280(void *location)
281	bool 	__stdcall Ordinal281(void *hArchive, HANDLE hFile, int a3, int a4, int a5, DWORD searchScope, struct _OVERLAPPED *lpOverlapped)
282	void 	__stdcall Ordinal282(int a1, int a2)
283	void 	__stdcall Ordinal283(int a1)
284	int 	__stdcall Ordinal284(int a1)
285	void 	__stdcall Ordinal285(int a1)
286	int 	__stdcall Ordinal286(int)
287	int 	__stdcall Ordinal287(int, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, int, DWORD NumberOfBytesRead, int)
288	int 	__stdcall Ordinal288(int)
289	int 	__stdcall Ordinal289(int, int, int, int, LONG lpDistanceToMoveHigh, int, int)
290	int 	__stdcall Ordinal290(int, int, int, int, int, int, LONG lpDistanceToMoveHigh, int)
291	int 	__stdcall Ordinal291(int, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, int, DWORD NumberOfBytesRead, int, int)
292	int 	__stdcall Ordinal292(int, int, int, int, int, int, DWORD NumberOfBytesRead, int)
293	int 	__stdcall Ordinal293(int, char *RootPathName, int, int, int)
294	LCID 	__cdecl SFileGetLocale()
295	int 	__stdcall Ordinal295(int, int)
296	int 	__stdcall Ordinal296(int, int)
297	int 	__stdcall Ordinal297(int, int, int)
298	nullsub
299	int 	__stdcall SFileAuthenticateArchiveEx(HANDLE hArchive, int, int, LONG lDistanceToMove, int, DWORD NumberOfBytesRead)
300	int 	__stdcall Ordinal300(int, int, int, int, int)
301	BOOL 	__cdecl   StormDestroy()
302	HMODULE __cdecl   StormGetModule()
303	BOOL 	__stdcall Ordinal303(int type, int a2, int a3)
304	BOOL 	__stdcall Ordinal304(int type, int a2, signed int a3)

312	BOOL	__stdcall SBltGetSCode(unsigned int a1, char *Dest, size_t Count, int a4)
313	int 	__stdcall SBltROP3(int, int, int, int, int, int, int, int)
314	int 	__stdcall SBltROP3Clipped(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
315	int 	__stdcall SBltROP3Tiled(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)

321	int 	__stdcall SBmpDecodeImage(int a1, signed int *a2, unsigned int a3, int a4, int a5, int a6, int a7, int a8, int a9)
322	BOOL 	__cdecl   SBmpDestroy()	// Does nothing, returns true
323	int 	__stdcall SBmpLoadImage(const char *fileName, int a2, int a3, int a4, int a5, int a6, int a7)
324	int 	__stdcall SBmpSaveImage(LPCSTR lpFileName, int a2, LPCVOID lpBuffer, int a4, int a5, int a6)
325	HANDLE 	__stdcall SBmpAllocLoadImage(const char *fileName, int a2, int a3, int a4, int a5, int a6, int a7, int (__stdcall *a8)(_DWORD))
326	int 	__stdcall SBmpSaveImageEx(LPCSTR lpFileName, int a2, LPCVOID lpBuffer, int a4, int a5, signed int a6, int a7)

331	int 	__stdcall SCodeCompile(char *directives1, char *directives2, int a3, unsigned int a4, unsigned int flags, char *src)
332	BOOL 	__stdcall SCodeDelete(int a1)
333	BOOL 	__cdecl   SCodeDestroy()
334	int 	__cdecl   SCodeExecute(int, int)
335	BOOL 	__stdcall SCodeGetPseudocode(int a1, int a2, unsigned int a3)


341	BOOL 	__stdcall SDrawAutoInitialize(HINSTANCE hWnd, LPCSTR lpClassName, LPCSTR lpWindowName, int (__stdcall *a4)(HWND, UINT, WPARAM, LPARAM), signed int a5, int nWidth, int nHeight, int a8)
342	BOOL 	__stdcall SDrawCaptureScreen(char *source)
343	int 	__stdcall SDrawClearSurface(signed int a1)
344	int 	__cdecl   SDrawDestroy()
345	int 	__cdecl   SDrawFlipPage()
346	HWND 	__stdcall SDrawGetFrameWindow(int a1)
347	BOOL 	__stdcall SDrawGetObjects(int a1, int a2, int a3, int a4, int a5, int a6, int a7)
348	BOOL 	__stdcall SDrawGetScreenSize(int a1, int a2, int a3)
349	BOOL 	__stdcall SDrawGetServiceLevel(int a1)
350	BOOL 	__stdcall SDrawLockSurface(int SurfaceNumber, RECT *lpDestRect, void **lplpSurface, int *lpPitch, int arg_unused)
351	BOOL 	__stdcall SDrawManualInitialize(HWND a1, int a2, int a3, int a4, int a5, int a6, int a7, void *a8)
352	int 	__stdcall SDrawMessageBox(LPCSTR lpText, LPCSTR lpCaption, UINT uType)
353	BOOL 	__cdecl   SDrawPostClose()
354	BOOL 	__cdecl   SDrawRealizePalette()
355	int 	__stdcall SDrawSelectGdiSurface(unsigned int a1, int a2)
356	BOOL 	__stdcall SDrawUnlockSurface(int zero0, void *lpSurface, int zero1, int zero2)
357	bool 	__stdcall SDrawUpdatePalette(UINT iStart, UINT cEntries, PALETTEENTRY *pPalEntries, int a4)
358	bool 	__stdcall SDrawUpdateScreen(int a1)
359	int 	__cdecl   SEvtDestroy()

372	BOOL 	__stdcall SEvtDispatch(int a1, int a2, int a3, int a4)
373	BOOL 	__stdcall SEvtRegisterHandler(signed int a1, unsigned int a2, int event, int a4, int a5)
374	BOOL 	__stdcall SEvtUnregisterHandler(int a1, int a2, int a3, int a4)
375	BOOL 	__stdcall SEvtUnregisterType(int a1, int a2)
376	BOOL 	__stdcall Ordinal376(int a1, int type)
377	BOOL 	__stdcall Ordinal377(int a1, int type)
378	BOOL 	__stdcall Ordinal378(int a1)

381	int 	__stdcall SGdiBitBlt(int a1, int a2, int a3, int a4, unsigned int a5, int a6, int a7, unsigned int a8, signed int a9)
382	BOOL	__stdcall SGdiCreateFont(const void *a1, signed int a2, int a3, int a4, signed int a5, int a6, const void *a7, int a8)
383	BOOL	__stdcall SGdiDeleteObject(int a1)
384	BOOL 	__cdecl   SGdiDestroy()
385     int 	__stdcall SGdiExtTextOut(int a1, int a2, int a3, int a4, unsigned int a8, signed int a6, signed int a7, const char *arg1C, unsigned int arg20)
386     int 	__stdcall SGdiImportFont(HGDIOBJ h, int a3)
387	int 	__stdcall SGdiLoadFont(char *Str, int a5, int a6, int argC, int a7, int a8)
388	int 	__stdcall SGdiRectangle(int a1, int a2, int a3, int a4, int a5, int a6)
389	BOOL	__stdcall SGdiSelectObject(int a1)
390	BOOL	__stdcall SGdiSetPitch(int a1)
391	int 	__stdcall SGdiTextOut(int a1, int a2, int a3, unsigned int a8, const char *arg1C, unsigned int arg20)
392	int 	__stdcall Ordinal392(int, int, int, int)   // "SGdi4"
393	int 	__stdcall Ordinal393(int, int, int)

399	int 	__cdecl Ordinal399(int, int, int, int, int)

401	void *	__stdcall SMemAlloc(int amount, char *logfilename, int logline, int defaultValue)
402	bool 	__cdecl   SMemDestroy()
403	int 	__stdcall SMemFree(void *location, char *logfilename, int logline, int defaultValue)
404	int 	__stdcall SMemGetSize(int, char, DWORD ExitCode)
405	int 	__stdcall SMemReAlloc(int, int, int, DWORD ExitCode, int)
406	int 	__stdcall Ordinal406(int, int, int)

412	int 	__stdcall Ordinal412(int, int, int, int, int, int)
413	int 	__stdcall Ordinal413(int, int)
414	int 	__stdcall Ordinal414(int, int, int)
415	int 	__stdcall Ordinal415(int, int, int)
416	int 	__stdcall Ordinal416(int, int, int)
417	int 	__stdcall Ordinal417(int, int, int)
418	int 	__stdcall Ordinal418(int)
419	int 	__stdcall Ordinal419(int)
420	BOOL 	__stdcall Ordinal420(int a1, int a2, int a3)
421	BOOL 	__stdcall SRegLoadData(char *Source, LPCSTR lpValueName, HKEY phkResult, LPBYTE lpData, int a5, LPDWORD lpcbData)
422	BOOL	__stdcall SRegLoadString(char *Source, LPCSTR lpValueName, HKEY phkResult, LPBYTE lpData, size_t resultSize)
423	BOOL	__stdcall SRegLoadValue(char *Source, LPCSTR lpValueName, HKEY hKey, char *result)
424	BOOL	__stdcall SRegSaveData(char *Source, LPCSTR lpValueName, BYTE flags, BYTE *lpData, DWORD cbData)
425	BOOL 	__stdcall SRegSaveString(char *Source, LPCSTR lpValueName, BYTE flags, BYTE *lpData)
426	BOOL	__stdcall SRegSaveValue(char *Source, LPCSTR lpValueName, BYTE flags, DWORD result)
427	BOOL 	__stdcall Ordinal427(char flags, char *dest, int length)				// Gets subkey names
428	BOOL 	__stdcall Ordinal428(HKEY hKey, LPCSTR lpValueName, HKEY phkResult)			// REG_MULTI_SZ   // read key
429	BOOL 	__stdcall Ordinal429(HKEY hKey, DWORD cbName, DWORD dwIndex, char *, size_t)		// read key
430	BOOL 	__stdcall Ordinal430(HKEY hKey, int, DWORD cSubKeys)
431	BOOL 	__stdcall STransBlt(int a1, int a2, int a3, int a4, int a5)
432	BOOL	__stdcall STransBltUsingMask(int a1, int a2, int a3, int a4, int a5)
433	BOOL	__stdcall STransCreate(int a1, int a2, int a3, signed int a4, int a5, int a6, int a7)
434	BOOL	__stdcall STransDelete(int a1)
435	BOOL	__cdecl   STransDestroy()
436	BOOL 	__stdcall STransDuplicate(int a1, int a2)
437	BOOL	__stdcall STransIntersectDirtyArray(int a1, int a2, unsigned __int8 a3, int a4)
438	BOOL	__stdcall STransInvertMask(int a1, int a2)
439	BOOL	__stdcall STransLoad(char *Str, int a5, int a6, int a4)
440	BOOL	__stdcall STransSetDirtyArrayInfo(signed int a1, int a2, int a3, int a4)
441	BOOL	__stdcall STransUpdateDirtyArray(int a1, char a2, int a3, int a4, int a5, int a6)
442	BOOL	__stdcall Ordinal442(int, int, int, char *, size_t)
443	BOOL	__stdcall Ordinal443(int, int, int, int, int, int)  // STrans5
444	BOOL	__stdcall Ordinal444(int, int, int, int, int, int, int)
445	BOOL	__stdcall Ordinal445(int, int, int, int, int, int, int)
446	BOOL	__stdcall Ordinal446(int, int, int, int, int, int, int)
447	BOOL	__stdcall Ordinal447(char *, int, int, int) // STransLoadE

452	BOOL	__stdcall SVidGetSize(int a1, int a2, int a3, int a4)
453	BOOL	__stdcall SVidInitialize(int arg0)
454	BOOL	__stdcall SVidPlayBegin(char *Str, int arg4, int a3, int a4, int a5, int a6, int a7)
455	BOOL	__stdcall SVidPlayBeginFromMemory(LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, int arg4, int a3, int a4, int a6, DWORD NumberOfBytesWritten, int a8)
456	BOOL	__cdecl   SVidPlayContinue()
457	BOOL	__stdcall SVidPlayContinueSingle(int a1, int a2, int a3)
458	BOOL	__stdcall SVidPlayEnd(int a1)
459	int 	__stdcall Ordinal459(int, int, int, int)
460	int 	__stdcall Ordinal460(int)
461	int 	__stdcall SErrDisplayError(DWORD dwMessageId, char, DWORD ExitCode, char, int, UINT uExitCode)
462	int 	__stdcall SErrGetErrorStr(DWORD dwMessageId, LPSTR lpBuffer, DWORD nSize)
463	int 		  SErrGetLastError()
464	int 	__stdcall Ordinal464(__int16, int, int)
465	int 	__stdcall SErrSetLastError(DWORD dwErrCode)
466	int 	__stdcall Ordinal466(int, int)
467	int 	__stdcall Ordinal467(int)
468	int 	__stdcall Ordinal468(int)
469	int 	__stdcall Ordinal469(int)
470	int 	__stdcall Ordinal470(int)
471	int 	__stdcall Ordinal471(int, int, int)
472	int 	__stdcall Ordinal472(int)
473	int 	__stdcall Ordinal473(int)
474	int 	__stdcall Ordinal474(int, int, int)
475	int 	__stdcall Ordinal475(int, int, int, int)
476	int 	__stdcall Ordinal476(int, int)
477	int 	__stdcall Ordinal477(int, int, int, int, int, int, int, int)
478	int 	__stdcall Ordinal478(int)
479	int 	__stdcall Ordinal479(int, int)
480	int 	__stdcall Ordinal480(int, int)
481	int 	__stdcall SMemFindNextBlock(int, int, int, int)
482	int 	__stdcall SMemFindNextHeap(int, int, int)
483	int 	__stdcall SMemGetHeapByCaller(int, int)
484	int 	__stdcall SMemGetHeapByPtr(int)
485	int 	__stdcall SMemHeapAlloc(int, int, int)
486	int 	__stdcall SMemHeapCreate(int, int, int, char, DWORD ExitCode)
487	int 	__stdcall SMemHeapDestroy(int)
488	int 	__stdcall SMemHeapFree(int, int, int)
489	int	__stdcall SMemHeapRealloc(int, int, int, int)
490	int 	__stdcall SMemHeapSize(int, int, int)
491	int 	__stdcall SMemCpy(int, int, int)
492	int 	__stdcall Ordinal492(int, int, char)
493	int 	__stdcall Ordinal493(void *, void *, size_t)
494	int 	__stdcall SMemZero(void *location, size_t length)
495	int 	__stdcall Ordinal495(int, int, int)
496	int 	__stdcall Ordinal496(int, char)
497	int 	__stdcall SMemDumpState(int, int)
498	nullsub

501	int 	__stdcall SStrNCpy(char *dst, char *src, int size)
502	DWORD 	__stdcall SStrHash(LPCSTR String, BOOLEAN IsFilename, DWORD Seed)
503	int 	__stdcall SStrNCat(char *base, char *new, int max_length)
504	int 	__stdcall Ordinal504(int, int, int, char *, int)
505	int 	__stdcall Ordinal505(int, int, int)
506	int 	__stdcall SStrLen(char* str)
507	int	__stdcall Ordinal507(int, char, DWORD ExitCode)
508	int	__stdcall SStrCmp(char *str1, char *str2, size_t size)
509	int	__stdcall SStrCmpI(char *str1, char *str2, size_t size)
510	int 	__stdcall SStrUpr(char *str)
511	int 	__stdcall Ordinal511(int)
512	int 	__stdcall Ordinal512(int, int, int)
513	int 	__stdcall Ordinal513(int, int, int)
514	int 	__stdcall Ordinal514(int, int, int)
515	int 	__stdcall Ordinal515(int, int, int)
516	int 	__stdcall Ordinal516(int)
517	int 	__stdcall Ordinal517(int)
518	int 		Ordinal518()
519	int 	__stdcall Ordinal519(int, int, int)

521	int 	__stdcall Ordinal521(int)

523	int 	__stdcall Ordinal523(int, int, int, int)
524	int 	__stdcall Ordinal524(int, int)
525	int 	__stdcall Ordinal525(int)

527	int 	__stdcall Ordinal527(int, int, int)
528	int 	__stdcall Ordinal528(int, int, int, int)
529	int 	__stdcall Ordinal529(int, int, int)
530	int 	__stdcall Ordinal530(int, int)
531	int 	__stdcall Ordinal531(int, int, int)
532	int 	__stdcall Ordinal532(int, int)
533	int 	__stdcall Ordinal533(int, int, int)
534	int 	__stdcall Ordinal534(int, int, int, int)
535	int 	__stdcall Ordinal535(int, int, int, int)
536	int 	__stdcall Ordinal536(int, int, int)
537	int 	__stdcall Ordinal537(int, int)
538	int 	__stdcall Ordinal538(int, float, float)
539	int 	__stdcall Ordinal539(int, int)
540	int 	__stdcall Ordinal540(int, float, float)
541	int 	__stdcall Ordinal541(DWORD NumberOfBytesWritten)
542	int 	__stdcall Ordinal542(LPCSTR lpFileName, int, int)
543	int 	__stdcall Ordinal543(int, int)
544	int 	__stdcall Ordinal544(int, int, DWORD NumberOfBytesWritten)
545	int 	__stdcall Ordinal545(DWORD NumberOfBytesWritten)
546	int 		Ordinal546()
547	int 	__cdecl Ordinal547(int, char *, char)
548	int 	__cdecl Ordinal548(DWORD NumberOfBytesWritten, char *, char NumberOfBytesWritten)  // Add to log file
549	int 	__stdcall Ordinal549(int, int)
550	int 	__stdcall Ordinal550(int, int)
551	int 	__stdcall Ordinal551(int, int, int, int, int, char, int)
552	int 	__stdcall Ordinal552(int, int, int, int)
553	int 	__stdcall Ordinal553(int, char *, va_list NumberOfBytesWritten)
554	nullsub2
555	nullsub2
556	nullsub2
557	nullsub3
558	nullsub2
559	nullsub
560	nullsub
561	int 	__cdecl Ordinal561(char *, char)
562	int 	__cdecl Ordinal562(DWORD dwMessageId, char, DWORD ExitCode, int, UINT uExitCode, char *, char)
563	int 		Ordinal563()
564	int 	__stdcall Ordinal564(int, int)
565	int 	__stdcall Ordinal565(int)
566	int 	__stdcall Ordinal566(int)
567	int 		Ordinal567()
568	int 	__stdcall Ordinal568(int)
569	char *	__fastcall SStrChr(char *str,char c) 		// Returns the substring after the first occurance of the specific character in the string.  Returns NULL if the character is not found.
570	char *	__fastcall SStrChrR(const char *str,char c) 	// Returns the address of the final occurance of c within the string str.  If it is not found, NULL is returned.
571	char *	__stdcall SStrChr(char *str, char c) 		// Returns the substring after the first occurance of the specific character in the string.  Returns NULL if the character is not found.
572	char *	__stdcall SStrChrR(const char *str,char c)	// Returns the address of the final occurance of c within the string str.  If it is not found, NULL is returned.
573	int 	__stdcall Ordinal573(int)
574	int 	__stdcall Ordinal574(int)
575	int 	__stdcall Ordinal575(int)
576	int 	__stdcall Ordinal576(int)
577	int 	__stdcall Ordinal577(int)
578	int 	__cdecl SStrPrintf(char *str, size_t size, char *format, char)
579	int 	__stdcall SStrLwr(char *str)
580	int 	__stdcall Ordinal580(int, int, int, int)
581	int 	__cdecl Ordinal581(char *, size_t, char *, va_list)
582	int 	__stdcall Ordinal582(int)
583	int 	__stdcall Ordinal583(LPRECT lpRect)
584	int 	__stdcall Ordinal584(HKEY hKey, HKEY phkResult)
585	int 	__stdcall Ordinal585(int, char *)
586	int 	__stdcall Ordinal586(int, int)
587	int 	__stdcall Ordinal587(int, int)
588	int 	__stdcall Ordinal588(char *, char *)
589	int 	__fastcall Ordinal589(char *, char *)
590	int 	__stdcall Ordinal590(int)
591	int 		Ordinal591()
592	int 	__fastcall Ordinal592(char *)
593	int 	__stdcall Ordinal593(int, int, int)
594	int 	__stdcall Ordinal594(int, int, int)
595	int 	__stdcall Ordinal595(int, int, int, char)
596	int 	__fastcall Ordinal588(char *, char *)
597	int 	__fastcall Ordinal589(char *, char *)
598	int 	__stdcall Ordinal598(int)

601	int __stdcall SBigAdd(int, int, int)
602	int __stdcall SBigAnd(int, int, int)
603	int __stdcall SBigCompare(BigBuffer buf1, BigBuffer buf2)
604	int __stdcall SBigCopy(int, int)
605	int __stdcall SBigDec(int, int)
606	int __stdcall SBigDel(BigBuffer buf)
607	int __stdcall SBigDiv(int, int, int)
608	int __stdcall SBigFindPrime(int, int, int, int)
609	int __stdcall SBigFromBinary(BigBuffer *buf, const void *str, unsigned int num)
610	int __stdcall SBigFromStr(int, int)
611	int __stdcall SBigFromStream(int, int, int, int)
612	int __stdcall SBigFromUnsigned(BigBuffer buf,unsigned int value)
613	int __stdcall SBigGcd(int, int, int)
614	int __stdcall SBigInc(int, int)
615	int __stdcall SBigInvMod(int, int, int)
616	int __stdcall SBigIsEven(BigBuffer buf)
617	int __stdcall SBigIsOdd(BigBuffer buf)
618	int __stdcall SBigIsOne(BigBuffer buf)
619	int __stdcall SBigIsPrime(BigBuffer buf)
620	int __stdcall SBigIsZero(BigBuffer buf)
621	int __stdcall SBigMod(int, int, int)
622	int __stdcall SBigMul(int, int, int)
623	int __stdcall SBigMulMod(int, int, int, int)
624	int __stdcall SBigNew(BigBuffer **Buffer)
625	int __stdcall SBigNot(int, int)
626	int __stdcall SBigOr(int, int, int)
627	int __stdcall SBigPow(int, int, int)
628	int __stdcall SBigPowMod(int, int, int, int)
629	int __stdcall SBigRand(int, int, int)
630	int __stdcall SBigSet2Exp(int, int)
631	int __stdcall SBigSetOne(BigBuffer *buf)
632	int __stdcall SBigSetZero(BigBuffer *buf)
633	int __stdcall SBigShl(int, int, int)
634	int __stdcall SBigShr(int, int, int)
635	int __stdcall SBigSquare(int, int)
636	int __stdcall SBigSub(int, int, int)
637	int __stdcall SBigToBinaryArray(int, int, int)
638	int __stdcall SBigToBinaryBuffer(int, int, int, int)
639	int __stdcall SBigToBinaryPtr(int, int, int)
640	int __stdcall SBigToStrArray(int, int, int)
641	int __stdcall SBigToStrBuffer(int, char *dst, int count)
642	int __stdcall SBigToStrPtr(int, int)
643	int __stdcall SBigToStreamArray(int, int, int)
644	int __stdcall SBigToStreamBuffer(int, int, int, int)
645	int __stdcall SBigToStreamPtr(int, int, int)
646	int __stdcall SBigToUnsigned(int, int)
647	int __stdcall SBigXor(int, int, int)
648	int __stdcall SSignatureVerify(int, int, int, int)
649	int __stdcall SSignatureVerifyStream_Begin(int)
650	int __stdcall SSignatureVerifyStream_ProvideData(int)
651	int __thiscall SSignatureVerifyStream_Finish(int, int)
652	int __stdcall SSignatureGenerate(int, int, int, int, int, int)
653	int SSignatureVerifyStream_GetSignatureLength()
654	int __stdcall Ordinal654(int, int)

901	int __stdcall Ordinal901(int, int, int)
902	int __stdcall Ordinal902(int, int, int, int, int, int)
903	int __stdcall Ordinal903(int, int, int)
904	int __stdcall Ordinal904(int, int, int, int, int, int)
905	int __stdcall Ordinal905(int, int)
906	int __stdcall Ordinal906(int, int)
907	int __stdcall Ordinal907(int, int)
908	int __stdcall Ordinal908(int, int)
909	int __stdcall Ordinal909(int, int, int)
910	int __stdcall Ordinal910(int, int, int)
911	int __stdcall Ordinal911(int, int, int)
912	int __stdcall Ordinal912(int, int, int)
913	int __stdcall Ordinal913(int, int, int)
914	int __stdcall Ordinal914(int, int, int)
}}}